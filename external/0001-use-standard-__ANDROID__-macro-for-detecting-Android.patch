From dcd556f41ca90b8b4bc60d592472d064b74c9b90 Mon Sep 17 00:00:00 2001
From: Hans-Christoph Steiner <hans@eds.org>
Date: Thu, 10 Oct 2019 12:12:59 +0200
Subject: [PATCH 1/3] use standard __ANDROID__ macro for detecting Android

https://sourceforge.net/p/predef/wiki/OperatingSystems/#android

```console
$ for clang in /opt/android-ndk-r20/toolchains/llvm/prebuilt/linux-x86_64/bin/*-clang; do printf "%s\t" `basename $clang`; $clang -E -dM - < /dev/null | grep __ANDROID__; done
aarch64-linux-android21-clang	#define __ANDROID__ 1
aarch64-linux-android22-clang	#define __ANDROID__ 1
aarch64-linux-android23-clang	#define __ANDROID__ 1
aarch64-linux-android24-clang	#define __ANDROID__ 1
aarch64-linux-android26-clang	#define __ANDROID__ 1
aarch64-linux-android27-clang	#define __ANDROID__ 1
aarch64-linux-android28-clang	#define __ANDROID__ 1
aarch64-linux-android29-clang	#define __ANDROID__ 1
armv7a-linux-androideabi16-clang	#define __ANDROID__ 1
armv7a-linux-androideabi17-clang	#define __ANDROID__ 1
armv7a-linux-androideabi18-clang	#define __ANDROID__ 1
armv7a-linux-androideabi19-clang	#define __ANDROID__ 1
armv7a-linux-androideabi21-clang	#define __ANDROID__ 1
armv7a-linux-androideabi22-clang	#define __ANDROID__ 1
armv7a-linux-androideabi23-clang	#define __ANDROID__ 1
armv7a-linux-androideabi24-clang	#define __ANDROID__ 1
armv7a-linux-androideabi26-clang	#define __ANDROID__ 1
armv7a-linux-androideabi27-clang	#define __ANDROID__ 1
armv7a-linux-androideabi28-clang	#define __ANDROID__ 1
armv7a-linux-androideabi29-clang	#define __ANDROID__ 1
i686-linux-android16-clang	#define __ANDROID__ 1
i686-linux-android17-clang	#define __ANDROID__ 1
i686-linux-android18-clang	#define __ANDROID__ 1
i686-linux-android19-clang	#define __ANDROID__ 1
i686-linux-android21-clang	#define __ANDROID__ 1
i686-linux-android22-clang	#define __ANDROID__ 1
i686-linux-android23-clang	#define __ANDROID__ 1
i686-linux-android24-clang	#define __ANDROID__ 1
i686-linux-android26-clang	#define __ANDROID__ 1
i686-linux-android27-clang	#define __ANDROID__ 1
i686-linux-android28-clang	#define __ANDROID__ 1
i686-linux-android29-clang	#define __ANDROID__ 1
x86_64-linux-android21-clang	#define __ANDROID__ 1
x86_64-linux-android22-clang	#define __ANDROID__ 1
x86_64-linux-android23-clang	#define __ANDROID__ 1
x86_64-linux-android24-clang	#define __ANDROID__ 1
x86_64-linux-android26-clang	#define __ANDROID__ 1
x86_64-linux-android27-clang	#define __ANDROID__ 1
x86_64-linux-android28-clang	#define __ANDROID__ 1
x86_64-linux-android29-clang	#define __ANDROID__ 1
$ for gcc in /opt/android-ndk-r10e/toolchains/*/prebuilt/*/bin/*-gcc; do printf "%s\t" `basename $gcc`; $gcc  -E -dM - < /dev/null | grep __ANDROID__; done
aarch64-linux-android-gcc	#define __ANDROID__ 1
arm-linux-androideabi-gcc	#define __ANDROID__ 1
arm-linux-androideabi-gcc	#define __ANDROID__ 1
mips64el-linux-android-gcc	#define __ANDROID__ 1
mipsel-linux-android-gcc	#define __ANDROID__ 1
mipsel-linux-android-gcc	#define __ANDROID__ 1
i686-linux-android-gcc	#define __ANDROID__ 1
i686-linux-android-gcc	#define __ANDROID__ 1
x86_64-linux-android-gcc	#define __ANDROID__ 1
```
---
 src/app/config/config.c |  4 ++--
 src/lib/log/log.c       | 16 ++++++++--------
 src/lib/log/log.h       |  4 ++--
 3 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/app/config/config.c b/src/app/config/config.c
index deda2448b..5ba187256 100644
--- a/src/app/config/config.c
+++ b/src/app/config/config.c
@@ -5735,14 +5735,14 @@ options_init_logs(const or_options_t *old_options, or_options_t *options,
       }
 
       if (!strcasecmp(smartlist_get(elts, 0), "android")) {
-#ifdef HAVE_ANDROID_LOG_H
+#ifdef __ANDROID__
         if (!validate_only) {
           add_android_log(severity, options->AndroidIdentityTag);
         }
 #else
         log_warn(LD_CONFIG, "Android logging is not supported"
                             " on this system. Sorry.");
-#endif /* defined(HAVE_ANDROID_LOG_H) */
+#endif /* defined(__ANDROID__) */
         goto cleanup;
       }
     }
diff --git a/src/lib/log/log.c b/src/lib/log/log.c
index 83f04a346..55588301f 100644
--- a/src/lib/log/log.c
+++ b/src/lib/log/log.c
@@ -51,9 +51,9 @@
 #include "lib/fdio/fdio.h"
 #include "lib/cc/ctassert.h"
 
-#ifdef HAVE_ANDROID_LOG_H
+#ifdef __ANDROID__
 #include <android/log.h>
-#endif // HAVE_ANDROID_LOG_H.
+#endif // __ANDROID__
 
 /** @{ */
 /** The string we stick at the end of a log message when it is too long,
@@ -126,7 +126,7 @@ should_log_function_name(log_domain_mask_t domain, int severity)
   }
 }
 
-#ifdef HAVE_ANDROID_LOG_H
+#ifdef __ANDROID__
 /** Helper function to convert Tor's log severity into the matching
  * Android log priority.
  */
@@ -151,7 +151,7 @@ severity_to_android_log_priority(int severity)
       // LCOV_EXCL_STOP
   }
 }
-#endif /* defined(HAVE_ANDROID_LOG_H) */
+#endif /* defined(__ANDROID__) */
 
 /** A mutex to guard changes to logfiles and logging. */
 static tor_mutex_t log_mutex;
@@ -538,10 +538,10 @@ logfile_deliver(logfile_t *lf, const char *buf, size_t msg_len,
 #endif /* defined(MAXLINE) */
 #endif /* defined(HAVE_SYSLOG_H) */
   } else if (lf->is_android) {
-#ifdef HAVE_ANDROID_LOG_H
+#ifdef __ANDROID__
     int priority = severity_to_android_log_priority(severity);
     __android_log_write(priority, lf->android_tag, msg_after_prefix);
-#endif // HAVE_ANDROID_LOG_H.
+#endif // __ANDROID__
   } else if (lf->callback) {
     if (domain & LD_NOCB) {
       if (!*callbacks_deferred && pending_cb_messages) {
@@ -1268,7 +1268,7 @@ add_syslog_log(const log_severity_list_t *severity,
 }
 #endif /* defined(HAVE_SYSLOG_H) */
 
-#ifdef HAVE_ANDROID_LOG_H
+#ifdef __ANDROID__
 /**
  * Add a log handler to send messages to the Android platform log facility.
  */
@@ -1299,7 +1299,7 @@ add_android_log(const log_severity_list_t *severity,
   UNLOCK_LOGS();
   return 0;
 }
-#endif /* defined(HAVE_ANDROID_LOG_H) */
+#endif /* defined(__ANDROID__) */
 
 /** If <b>level</b> is a valid log severity, return the corresponding
  * numeric value.  Otherwise, return -1. */
diff --git a/src/lib/log/log.h b/src/lib/log/log.h
index 8e3601261..f339b813b 100644
--- a/src/lib/log/log.h
+++ b/src/lib/log/log.h
@@ -173,10 +173,10 @@ int add_file_log(const log_severity_list_t *severity,
 int add_syslog_log(const log_severity_list_t *severity,
                    const char* syslog_identity_tag);
 #endif // HAVE_SYSLOG_H.
-#ifdef HAVE_ANDROID_LOG_H
+#ifdef __ANDROID__
 int add_android_log(const log_severity_list_t *severity,
                     const char *android_identity_tag);
-#endif // HAVE_ANDROID_LOG_H.
+#endif // __ANDROID__.
 int add_callback_log(const log_severity_list_t *severity, log_callback cb);
 typedef void (*pending_callback_callback)(void);
 void logs_set_pending_callback_callback(pending_callback_callback cb);
-- 
2.20.1

